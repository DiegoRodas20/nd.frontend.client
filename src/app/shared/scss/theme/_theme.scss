@use '../utils' as *;
@import url($font-url);

* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

body {
    font-family: var(--font-family-body);
    font-size: var(--font-size-body);
    font-weight: normal;
    color: var(--text-body);
    line-height: 26px;
}

a {
    text-decoration: none;
}

h1,
h2,
h3,
h4,
h5,
h6 {
    font-family: var(--font-family-heading);
    color: var(--heading-primary);
    margin-top: 0px;
    font-weight: 700;
    line-height: 1.2;
}

h1 {
    font-size: 40px;
}

h2 {
    font-size: 36px;
}

h3 {
    font-size: 28px;
}

h4 {
    font-size: 24px;
}

h5 {
    font-size: 20px;
}

h6 {
    font-size: 16px;
}

ul {
    margin: 0px;
    padding: 0px;
}

p {
    font-family: var(--font-family-p);
    font-size: var(--font-size-p);
    font-weight: 400;
    color: var(--text-body);
    margin-bottom: 15px;
    line-height: 26px;
}

a,
button,
p,
input,
select,
textarea,
li {
    @include transition();
}

a:not([href]):not([class]),
a:not([href]):not([class]):hover {
    color: inherit;
    text-decoration: none;
}

a:focus,
.button:focus {
    text-decoration: none;
    outline: none;
}

a:focus,
a:hover {
    color: inherit;
    text-decoration: none;
}

a,
button {
    color: inherit;
    outline: none;
    border: none;
    background: transparent;
}

button:hover {
    cursor: pointer;
}

button:focus {
    outline: 0;
}

a.option,
button.option {
    border-radius: 6px;
    font-size: 15px;
    text-transform: capitalize;
    text-align: center;
    font-weight: 400;
    padding: 10px 30px;
}

input[type="text"],
input[type="email"],
input[type="tel"],
input[type="number"],
input[type="password"],
input[type="url"],
textarea {
    outline: none;
    background-color: var(--common-white);
    height: 56px;
    width: 100%;
    line-height: 56px;
    font-size: var(--font-size-body);
    color: var(--common-black);
    padding-left: 26px;
    padding-right: 26px;
    border: 1px solid #E0E2E3;

    &:focus {
        border-color: var(--common-black);

        &::placeholder {
            opacity: 0;
        }
    }
}

textarea {
    line-height: 1.4;
    padding-top: 17px;
    padding-bottom: 17px;
}

a {
    transition: all .3s 0s ease-out;
}

.green-dark-bg {
    background-color: var(--green-dark);
}

.light-bg {
    background-color: var(--white-light);
}

.swiper-dot {

    line-height: 1;

    .swiper-pagination-bullet {

        width: 10px;
        height: 10px;
        background-color: rgba($color: #fff, $alpha: .2);
        opacity: 1;
        position: relative;

        & button {
            font-size: 0;
        }

        &.swiper-pagination-bullet-active {
            background-color: var(--common-white);
        }
    }
}

.toast-container .ngx-toastr {
    color: var(--common-black) !important;
    background-color: var(--common-white);
    border-radius: 4px !important;
    box-shadow: 0 1px 10px 0 rgba(0, 0, 0, .1), 0 2px 15px 0 rgba(0, 0, 0, .05) !important;
}

.toast-warning {
    background-image: url('../../../../assets/icons/warning-icon.svg') !important;

    & .toast-progress {
        background-color: var(--alert-warning);
        opacity: 1;
    }
}

.toast-success {

    background-image: url('../../../../assets/icons/success-icon.svg') !important;

    & .toast-progress {
        background-color: var(--alert-success);
        opacity: 1;
    }
}

.toast-error {

    background-image: url('../../../../assets/icons/error-icon.svg') !important;

    & .toast-progress {
        background-color: var(--alert-error);
        opacity: 1;
    }
}